{"version":3,"file":"vector-tiles-C2GHO6TL.js","sources":["../../node_modules/ol/Feature.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/expr/expression.js","../../node_modules/ol/expr/cpu.js","../../node_modules/ol/render/canvas/style.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/linechunk.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ol/render/Feature.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/renderer/canvas/VectorTileLayer.js","../../node_modules/ol/layer/VectorTile.js","../../node_modules/ol/format/Feature.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../../node_modules/ol/format/MVT.js","../../node_modules/ol/VectorTile.js","../../node_modules/ol/VectorRenderTile.js","../../node_modules/ol/source/VectorTile.js","../../js/vector-tiles.js"],"sourcesContent":["/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\"\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id\n    ).enableSimplifyTransformed(),\n    false,\n    options\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options)\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options\n  );\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").FeatureLike>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").FeatureLike>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","import '../css/style.css';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { Fill, Icon, Stroke, Style, Text } from 'ol/style.js';\n\n// https://openlayers.org/en/latest/examples/mapbox-vector-tiles.html\n\nconst mapserverUrl = import.meta.env.VITE_MAPSERVER_BASE_URL;\nconst mapfilesPath = import.meta.env.VITE_MAPFILES_PATH;\n\nconst map = new Map({\n    layers: [\n        new VectorTileLayer({\n            source: new VectorTileSource({\n                format: new MVT(),\n                url:\n                    mapserverUrl + mapfilesPath + 'vector-tiles.map&MODE=tile&TILE={x}+{y}+{z}&LAYERS=countries&map.imagetype=mvt',\n            }),\n            style: function (feature) {\n                return new Style({\n                    //fill: new Fill({\n                    //    color: 'rgba(255, 0, 0, 0.5)', // Red fill color with 50% opacity\n                    //}),\n                    stroke: new Stroke({\n                        color: 'rgb(66, 133, 244)', // Light blue border color\n                        width: 2, // Border width\n                    }),\n                });\n            },\n        }),\n    ],\n    target: 'map',\n    view: new View({\n        center: [-472202, 7530279],\n        zoom: 4,\n    }),\n});"],"names":["Feature","BaseObject","geometryOrProperties","geometry","properties","clone","style","unlistenByKey","listen","EventType","createStyleFunction","id","name","obj","styles","assert","Fill","options","color","interpolatePoint","flatCoordinates","offset","end","stride","fraction","dest","dimension","o","t","n","x1","y1","length","cumulativeLengths","i","x2","y2","target","index","binarySearch","lerp","lineStringCoordinateAtM","m","extrapolate","coordinate","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","ends","interpolate","ii","lineStringLength","LineString","SimpleGeometry","coordinates","layout","extend","lineString","x","y","closestPoint","minSquaredDistance","closestSquaredDistanceXY","maxSquaredDelta","assignClosestPoint","callback","forEachSegment","inflateCoordinates","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","extent","intersectsLineString","deflateCoordinates","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","width","Stroke$1","ImageStyle","toSize","scale","abstract","pixelRatio","displacement","opacity","rotateWithView","rotation","listener","asColorLike","toString","RegularShape","size","fill","image","renderOptions","context","createCanvasContext2D","ImageState","stroke","strokeWidth","r1","r2","tmp","points","alpha","a","b","d","e","miterRatio","k","l","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","defaultLineCap","defaultLineJoin","strokeStyle","defaultStrokeStyle","defaultLineWidth","defaultMiterLimit","add","maxRadius","defaultFillStyle","asArray","radius","radius2","startAngle","step","angle0","radiusC","CircleStyle","Style","defaultGeometryFunction","renderer","text","feature","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","resolution","Style$1","DEFAULT_FILL_COLOR","Text","overflow","font","maxAngle","offsetX","offsetY","placement","repeat","textAlign","justify","textBaseline","padding","quickselect","arr","left","right","compare","quickselectStep","defaultCompare","z","s","sd","newLeft","newRight","j","swap","RBush","maxEntries","bbox","node","result","intersects","toBBox","nodesToSearch","child","childBBox","contains","data","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","height","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","area","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","minX","minY","maxX","maxY","children","stack","taintedTestContext","IconImage","EventTarget","src","crossOrigin","imageState","decodeFallback","canvas","ctx","asString","get","cacheKey","iconImage","iconImageCache","calculateScale","wantedWidth","wantedHeight","Icon","getUid","getIconImage","onload","imageSize","anchor","iconImageSize","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","ascending","typeName","type","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","value","CallExpression","operator","args","newParsingContext","getTypeFromHint","typeHint","parse","encoded","isStringColor","parseCallExpression","Ops","parsers","createParser","_","withArgsCount","withGetArgs","firstArg","withVarArgs","withNoArgs","usesFeatureId","parseArgsOfType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","arg","hint","varName","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","expression","gotType","expectedType","sameType","argsCount","inputType","fallback","match","output","expectedInputType","interpolationType","interpolation","input","stop","condition","haystack","needleType","colors","parsedColors","returnType","argValidators","actualType","parser","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","fromString","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","compileInterpolateExpression","op","min","max","base","previousInput","previousOutput","isColor","withAlpha","interpolateColor","interpolateNumber","input1","output1","input2","output2","delta","along","factor","rgba1","rgba2","lcha1","rgbaToLcha","lcha2","deltaHue","lcha","normalize","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","filter","styleLength","someMatched","filterEvaluator","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","isEmpty","empty","prefix","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","pointsName","requireNumber","radius1","angle","shape","evaluateRadius","circle","Circle","requireColorLike","requireNumberArray","array","requireSizeLike","property","Property","BaseVectorLayer","Layer","baseOptions","pixel","frameState","renderOrder","toStyleLike","toStyleFunction","first","candidate","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","CanvasBuilder","tolerance","maxExtent","dashArray","dash","tmpCoord","myEnd","containsCoordinate","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","coordinateRelationship","Relationship","builderEnds","builderEnd","builderBegin","builderEndss","endss","myEnds","CanvasInstruction","inflateMultiCoordinatesArray","inflateCoordinatesArray","hitDetectionInstructions","instruction","begin","reverseSubArray","state","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","lineWidth","equals","endGeometryInstruction","buffer","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","snap","PolygonBuilder","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","segmentLength","missing","matchingChunk","chunkStart","chunkEnd","start","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","oo","c","cc","chunk","chunkBegin","geometryWidths","interiorPoints","beg","keep","defaultPadding","p0","p1","p2","p3","currentFillStyle","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","Builder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","beginX","beginY","startOffset","startLength","endM","endX","endY","reverse","flat","rotate","PI","singleSegment","previousAngle","iStart","charLength","len","chars","tmpExtent","createEmpty","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","createTransform","key","textIsArray","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","w","h","label","leftRight","strokeInstructions","fillInstructions","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","transform","composeTransform","applyTransform","createOrUpdate","contextScale","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transform2D","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","dx","dy","r","fn","coords","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","hitTolerance","declutteredFeatures","contextSize","newContext","extendCoordinate","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","jj","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","CanvasImmediateRenderer","userTransform","toFixed","localTransform","close","transformGeom2D","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","img","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","clamp","g","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","simplifiedGeometry","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","MultiLineString","lineStrings","multiLineString","arrayMaxSquaredDelta","assignClosestArrayPoint","midpoints","midpoint","simplifiedEnds","douglasPeuckerArray","intersectsLineStringArray","deflateCoordinatesArray","MultiPoint","point","multiPoint","squaredDistance","squaredDx","Point","containsXY","linearRingss","flatCenters","createOrUpdateFromFlatCoordinates","MultiPolygon","polygons","thisEndss","polygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","orientLinearRingsArray","linearRingssCenter","getInteriorPointsOfMultiArray","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","Polygon","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","tmpTransform","RenderFeature","createOrUpdateFromCoordinate","flatCenter","getCenter","getInteriorPointOfArray","inflateEnds","projection","getProjection","pixelExtent","projectedExtent","getHeight","transformFn","memoizeOne","quantizeArray","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","event","source","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","CanvasTileLayerRenderer","layer","tile","render","TileState","viewState","viewHints","hifi","ViewHint","layerRevision","revision","builderState","declutter","sourceTileGrid","tileExtent","sourceTiles","layerUid","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","getIntersection","builderExtent","bufferedExtent","CanvasBuilderGroup","getSquaredRenderTolerance","dirty","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","declutterExecutorGroup","matches","tileGrid","boundingExtent","renderedTiles","found","executorGroups","declutterExecutorGroups","resolve","reject","projectionExtent","tileCoord","containsExtent","wrapX","corner","getTopLeft","tilePixel","accumulator","hitDetectionImageData","tileSize","tiles","center","worldOffset","multiply","renderMode","replayTypes","tileSource","clips","clipZs","ready","group","currentZ","contextSaved","currentClip","clip","replayState","tileResolution","renderPixelRatio","renderScale","canvasTransform","resetTransform","scaleTransform","pixelScale","translateTransform","VectorTileLayer","TileProperty","preload","useInterimTilesOnError","VectorTileLayer$1","FeatureFormat","dataProjection","transformGeometryWithOptions","write","featureProjection","transformed","equivalentProjection","fromProjection","toProjection","getTransform","power","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","pbf","Pbf","require$$0","buf","SHIFT_LEFT_32","SHIFT_RIGHT_32","TEXT_DECODER_MIN_LENGTH","utf8TextDecoder","readField","val","tag","startPos","readUInt32","readInt32","isSigned","readVarintRemainder","num","pos","readUtf8TextDecoder","readUtf8","readPackedEnd","writeInt32","writeBigVarint","str","writeUtf8","makeRoomForExtraLength","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","toNum","low","high","writeBigVarintLow","writeBigVarintHigh","lsb","extraLen","b0","bytesPerSequence","b1","b2","b3","lead","MVT","Projection","cmd","coordsLen","currentEnd","cmdLen","rawFeature","values","getGeometryType","geom","ctor","layers","PBF","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","Tile","tileLoadFunction","loader","canvasPool","VectorRenderTile","urlTileCoord","getSourceTiles","releaseCanvas","VectorTile","UrlTile","extentFromProjection","createXYZ","defaultLoadFunction","TileCache","tileCache","fromKey","tileFeatures","usedTiles","usedSourceTiles","getCacheKeyForTileKey","bufferExtent","sourceExtent","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","getKeyZXY","newTile","code","resolutions","origins","tileSizes","DEFAULT_MAX_ZOOM","TileGrid","tileCount","VectorTileSource","mapserverUrl","mapfilesPath","Map","View"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]}